<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.changan.icar.server.dao.AccountMapper">
  <resultMap id="BaseResultMap" type="com.changan.icar.comm.po.Account">
    <id column="uuid" jdbcType="CHAR" property="uuid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="status" jdbcType="SMALLINT" property="status" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="push_tag" jdbcType="VARCHAR" property="pushTag" />
    <result column="push_alias" jdbcType="VARCHAR" property="pushAlias" />
    <result column="default_device" jdbcType="CHAR" property="defaultDevice" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="user_from" jdbcType="INTEGER" property="userFrom" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.changan.icar.comm.po.Account">
    <result column="pic_url" jdbcType="LONGVARCHAR" property="picUrl" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    uuid, username, status, phone, push_tag, push_alias, default_device, type, user_from
  </sql>
  <sql id="Blob_Column_List">
    pic_url
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.changan.icar.comm.po.AccountExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.changan.icar.comm.po.AccountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from account
    where uuid = #{uuid,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from account
    where uuid = #{uuid,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.changan.icar.comm.po.AccountExample">
    delete from account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.changan.icar.comm.po.Account">
    insert into account (uuid, username, status, 
      phone, push_tag, push_alias, 
      default_device, type, user_from, 
      pic_url)
    values (#{uuid,jdbcType=CHAR}, #{username,jdbcType=VARCHAR}, #{status,jdbcType=SMALLINT}, 
      #{phone,jdbcType=VARCHAR}, #{pushTag,jdbcType=VARCHAR}, #{pushAlias,jdbcType=VARCHAR}, 
      #{defaultDevice,jdbcType=CHAR}, #{type,jdbcType=INTEGER}, #{userFrom,jdbcType=INTEGER}, 
      #{picUrl,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.changan.icar.comm.po.Account">
    insert into account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        uuid,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="pushTag != null">
        push_tag,
      </if>
      <if test="pushAlias != null">
        push_alias,
      </if>
      <if test="defaultDevice != null">
        default_device,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="userFrom != null">
        user_from,
      </if>
      <if test="picUrl != null">
        pic_url,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        #{uuid,jdbcType=CHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="pushTag != null">
        #{pushTag,jdbcType=VARCHAR},
      </if>
      <if test="pushAlias != null">
        #{pushAlias,jdbcType=VARCHAR},
      </if>
      <if test="defaultDevice != null">
        #{defaultDevice,jdbcType=CHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="userFrom != null">
        #{userFrom,jdbcType=INTEGER},
      </if>
      <if test="picUrl != null">
        #{picUrl,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.changan.icar.comm.po.AccountExample" resultType="java.lang.Long">
    select count(*) from account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update account
    <set>
      <if test="record.uuid != null">
        uuid = #{record.uuid,jdbcType=CHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=SMALLINT},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.pushTag != null">
        push_tag = #{record.pushTag,jdbcType=VARCHAR},
      </if>
      <if test="record.pushAlias != null">
        push_alias = #{record.pushAlias,jdbcType=VARCHAR},
      </if>
      <if test="record.defaultDevice != null">
        default_device = #{record.defaultDevice,jdbcType=CHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.userFrom != null">
        user_from = #{record.userFrom,jdbcType=INTEGER},
      </if>
      <if test="record.picUrl != null">
        pic_url = #{record.picUrl,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update account
    set uuid = #{record.uuid,jdbcType=CHAR},
      username = #{record.username,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=SMALLINT},
      phone = #{record.phone,jdbcType=VARCHAR},
      push_tag = #{record.pushTag,jdbcType=VARCHAR},
      push_alias = #{record.pushAlias,jdbcType=VARCHAR},
      default_device = #{record.defaultDevice,jdbcType=CHAR},
      type = #{record.type,jdbcType=INTEGER},
      user_from = #{record.userFrom,jdbcType=INTEGER},
      pic_url = #{record.picUrl,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update account
    set uuid = #{record.uuid,jdbcType=CHAR},
      username = #{record.username,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=SMALLINT},
      phone = #{record.phone,jdbcType=VARCHAR},
      push_tag = #{record.pushTag,jdbcType=VARCHAR},
      push_alias = #{record.pushAlias,jdbcType=VARCHAR},
      default_device = #{record.defaultDevice,jdbcType=CHAR},
      type = #{record.type,jdbcType=INTEGER},
      user_from = #{record.userFrom,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.changan.icar.comm.po.Account">
    update account
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=SMALLINT},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="pushTag != null">
        push_tag = #{pushTag,jdbcType=VARCHAR},
      </if>
      <if test="pushAlias != null">
        push_alias = #{pushAlias,jdbcType=VARCHAR},
      </if>
      <if test="defaultDevice != null">
        default_device = #{defaultDevice,jdbcType=CHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="userFrom != null">
        user_from = #{userFrom,jdbcType=INTEGER},
      </if>
      <if test="picUrl != null">
        pic_url = #{picUrl,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where uuid = #{uuid,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.changan.icar.comm.po.Account">
    update account
    set username = #{username,jdbcType=VARCHAR},
      status = #{status,jdbcType=SMALLINT},
      phone = #{phone,jdbcType=VARCHAR},
      push_tag = #{pushTag,jdbcType=VARCHAR},
      push_alias = #{pushAlias,jdbcType=VARCHAR},
      default_device = #{defaultDevice,jdbcType=CHAR},
      type = #{type,jdbcType=INTEGER},
      user_from = #{userFrom,jdbcType=INTEGER},
      pic_url = #{picUrl,jdbcType=LONGVARCHAR}
    where uuid = #{uuid,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.changan.icar.comm.po.Account">
    update account
    set username = #{username,jdbcType=VARCHAR},
      status = #{status,jdbcType=SMALLINT},
      phone = #{phone,jdbcType=VARCHAR},
      push_tag = #{pushTag,jdbcType=VARCHAR},
      push_alias = #{pushAlias,jdbcType=VARCHAR},
      default_device = #{defaultDevice,jdbcType=CHAR},
      type = #{type,jdbcType=INTEGER},
      user_from = #{userFrom,jdbcType=INTEGER}
    where uuid = #{uuid,jdbcType=CHAR}
  </update>
</mapper>